import pandas as pd
from airflow import DAG
from airflow.operators.python_operator import PythonOperator
from airflow.utils.dates import days_ago
from datetime import datetime
import mysql.connector

# Function to read the XLS file and insert data into MySQL
def ingest_xls_to_mysql():
    # Path to the XLS file
    xls_file_path = '/Users/firaterman/Downloads/jj/events_database.xlsx'
    
    # Read the XLS file into a DataFrame using pandas
    df = pd.read_excel(xls_file_path)
    print(df.head(10))
    columns = df.columns.tolist()
    # Connect to MySQL
    cnx = mysql.connector.connect(
        user='root',
        password='password',
        host='localhost',
        database='digital_assets'
    )
 # Initialize the cursor and set it to None
    cursor = None


    # Get column information
    column_info = []
    for col in df.columns:
        column_data = df[col]
        column_type = str(column_data.dtype)
        max_length = column_data.astype(str).apply(len).max()
        column_info.append((col, column_type, max_length))

    # Generate SQL command
    table_name = 'my_table'
    sql_command = f"CREATE TABLE IF NOT EXISTS {table_name} (\n"
    for col_info in column_info:
        col_name, col_type, max_length = col_info
        if 'int' in col_type:
            sql_command += f"    {col_name} INT,\n"
        elif 'float' in col_type:
            sql_command += f"    {col_name} FLOAT,\n"
        elif 'datetime' in col_type:
            sql_command += f"    {col_name} DATETIME,\n"
        else:
            sql_command += f"    {col_name} VARCHAR({max_length}),\n"

    sql_command = sql_command.rstrip(',\n') + "\n)"

    try:
        cursor = cnx.cursor()
        
        # Get the column names from the DataFrame
        cursor.execute(sql_command)
        print("worked")
        # Iterate over the DataFrame rows and insert data into MySQL table
        for _, row in df.iterrows():
            # Prepare the column names and values for the MySQL query
            column_names = ', '.join(columns)
            values = ', '.join(f"'{row[col]}'" for col in columns)
            
            # Create the INSERT query dynamically
            insert_query = f"INSERT INTO {table_name} ({column_names}) VALUES ({values})"
            
            # Execute the INSERT query
            cursor.execute(insert_query)
        
        # Commit the changes
        cnx.commit()
    finally:
        # Close the cursor and MySQL connection in the finally block
        if cursor:
            cursor.close()
        if cnx.is_connected():
            cnx.close()

# Define the DAG
default_args = {
    'owner': 'airflow',
    'start_date': datetime(2023, 6, 8),
}

with DAG('xls_to_mysql_dag', default_args=default_args, schedule_interval='@once') as dag:
    ingest_task = PythonOperator(
        task_id='ingest_xls_to_mysql',
        python_callable=ingest_xls_to_mysql
    )

    ingest_task